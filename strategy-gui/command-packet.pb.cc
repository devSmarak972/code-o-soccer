// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command-packet.proto

#include "command-packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_command_2dpacket_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_command_2dpacket_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StrategyPacket_Tactic;
}  // namespace protobuf_command_2dpacket_2eproto
class StrategyPacket_TacticDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrategyPacket_Tactic>
      _instance;
} _StrategyPacket_Tactic_default_instance_;
class StrategyPacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StrategyPacket>
      _instance;
} _StrategyPacket_default_instance_;
namespace protobuf_command_2dpacket_2eproto {
static void InitDefaultsStrategyPacket_Tactic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StrategyPacket_Tactic_default_instance_;
    new (ptr) ::StrategyPacket_Tactic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StrategyPacket_Tactic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StrategyPacket_Tactic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStrategyPacket_Tactic}, {}};

static void InitDefaultsStrategyPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StrategyPacket_default_instance_;
    new (ptr) ::StrategyPacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::StrategyPacket::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StrategyPacket =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStrategyPacket}, {
      &protobuf_command_2dpacket_2eproto::scc_info_StrategyPacket_Tactic.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StrategyPacket_Tactic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StrategyPacket.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket_Tactic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket_Tactic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket_Tactic, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket_Tactic, botid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket, play_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket, tactic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::StrategyPacket, which_),
  1,
  0,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::StrategyPacket_Tactic)},
  { 9, 17, sizeof(::StrategyPacket)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StrategyPacket_Tactic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_StrategyPacket_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "command-packet.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024command-packet.proto\"\303\010\n\016StrategyPacke"
      "t\022\"\n\004play\030\001 \001(\0162\024.StrategyPacket.Play\022&\n"
      "\006tactic\030\002 \001(\0132\026.StrategyPacket.Tactic\022$\n"
      "\005which\030\003 \002(\0162\025.StrategyPacket.Which\032>\n\006T"
      "actic\022%\n\003tID\030\001 \002(\0162\030.StrategyPacket.Tact"
      "icID\022\r\n\005botID\030\002 \002(\005\"\304\004\n\004Play\022\014\n\010TestPlay"
      "\020\000\022\017\n\013SetPosition\020\001\022\016\n\nPenaltyOur\020\002\022\016\n\nP"
      "enaltyOpp\020\003\022\010\n\004Stop\020\004\022\017\n\013OurGoalKick\020\005\022\017"
      "\n\013OppGoalKick\020\006\022\020\n\014SuperOffense\020\007\022\014\n\010Off"
      "ense1\020\010\022\014\n\010Offense2\020\t\022\020\n\014SuperDefense\020\n\022"
      "\014\n\010Defense1\020\013\022\014\n\010Defense2\020\014\022\026\n\022PositionO"
      "urKickoff\020\r\022\026\n\022PositionOppKickoff\020\016\022\013\n\007K"
      "ickoff\020\017\022\026\n\022PositionOurPenalty\020\020\022\020\n\014Take"
      "GoalKick\020\021\022\027\n\023PositionOurFreeKick\020\022\022\027\n\023P"
      "ositionOppFreeKick\020\023\022\027\n\023PositionOurFreeB"
      "all\020\024\022\027\n\023PositionOppFreeBall\020\025\022\026\n\022Positi"
      "onOppPenalty\020\026\022\027\n\023PositionOurGoalKick\020\027\022"
      "\027\n\023PositionOppGoalKick\020\030\022\022\n\016PositionGath"
      "er\020\031\022\017\n\013OppFreeBall\020\032\022\017\n\013OurFreeBall\020\033\022\017"
      "\n\013OppFreeKick\020\034\022\017\n\013OurFreeKick\020\035\022\010\n\004None"
      "\020\036\"\230\002\n\010TacticID\022\t\n\005Block\020\000\022\016\n\nChargeBall"
      "\020\001\022\r\n\tCoverGoal\020\002\022\016\n\nDragToGoal\020\003\022\016\n\nDef"
      "endLine\020\004\022\017\n\013DefendPoint\020\005\022\r\n\tGoalieOur\020"
      "\006\022\r\n\tGoalieOpp\020\007\022\013\n\007MarkBot\020\010\022\010\n\004Pass\020\t\022"
      "\014\n\010Position\020\013\022\026\n\022PositionForPenalty\020\014\022\024\n"
      "\020PositionForStart\020\r\022\017\n\013ReceiveBall\020\016\022\n\n\006"
      "Defend\020\017\022\n\n\006Attack\020\020\022\t\n\005Steal\020\021\022\014\n\010Veloc"
      "ity\020\023\"\035\n\005Which\022\010\n\004PLAY\020\001\022\n\n\006TACTIC\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1116);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "command-packet.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_command_2dpacket_2eproto
const ::google::protobuf::EnumDescriptor* StrategyPacket_Play_descriptor() {
  protobuf_command_2dpacket_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2dpacket_2eproto::file_level_enum_descriptors[0];
}
bool StrategyPacket_Play_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StrategyPacket_Play StrategyPacket::TestPlay;
const StrategyPacket_Play StrategyPacket::SetPosition;
const StrategyPacket_Play StrategyPacket::PenaltyOur;
const StrategyPacket_Play StrategyPacket::PenaltyOpp;
const StrategyPacket_Play StrategyPacket::Stop;
const StrategyPacket_Play StrategyPacket::OurGoalKick;
const StrategyPacket_Play StrategyPacket::OppGoalKick;
const StrategyPacket_Play StrategyPacket::SuperOffense;
const StrategyPacket_Play StrategyPacket::Offense1;
const StrategyPacket_Play StrategyPacket::Offense2;
const StrategyPacket_Play StrategyPacket::SuperDefense;
const StrategyPacket_Play StrategyPacket::Defense1;
const StrategyPacket_Play StrategyPacket::Defense2;
const StrategyPacket_Play StrategyPacket::PositionOurKickoff;
const StrategyPacket_Play StrategyPacket::PositionOppKickoff;
const StrategyPacket_Play StrategyPacket::Kickoff;
const StrategyPacket_Play StrategyPacket::PositionOurPenalty;
const StrategyPacket_Play StrategyPacket::TakeGoalKick;
const StrategyPacket_Play StrategyPacket::PositionOurFreeKick;
const StrategyPacket_Play StrategyPacket::PositionOppFreeKick;
const StrategyPacket_Play StrategyPacket::PositionOurFreeBall;
const StrategyPacket_Play StrategyPacket::PositionOppFreeBall;
const StrategyPacket_Play StrategyPacket::PositionOppPenalty;
const StrategyPacket_Play StrategyPacket::PositionOurGoalKick;
const StrategyPacket_Play StrategyPacket::PositionOppGoalKick;
const StrategyPacket_Play StrategyPacket::PositionGather;
const StrategyPacket_Play StrategyPacket::OppFreeBall;
const StrategyPacket_Play StrategyPacket::OurFreeBall;
const StrategyPacket_Play StrategyPacket::OppFreeKick;
const StrategyPacket_Play StrategyPacket::OurFreeKick;
const StrategyPacket_Play StrategyPacket::None;
const StrategyPacket_Play StrategyPacket::Play_MIN;
const StrategyPacket_Play StrategyPacket::Play_MAX;
const int StrategyPacket::Play_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StrategyPacket_TacticID_descriptor() {
  protobuf_command_2dpacket_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2dpacket_2eproto::file_level_enum_descriptors[1];
}
bool StrategyPacket_TacticID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 19:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StrategyPacket_TacticID StrategyPacket::Block;
const StrategyPacket_TacticID StrategyPacket::ChargeBall;
const StrategyPacket_TacticID StrategyPacket::CoverGoal;
const StrategyPacket_TacticID StrategyPacket::DragToGoal;
const StrategyPacket_TacticID StrategyPacket::DefendLine;
const StrategyPacket_TacticID StrategyPacket::DefendPoint;
const StrategyPacket_TacticID StrategyPacket::GoalieOur;
const StrategyPacket_TacticID StrategyPacket::GoalieOpp;
const StrategyPacket_TacticID StrategyPacket::MarkBot;
const StrategyPacket_TacticID StrategyPacket::Pass;
const StrategyPacket_TacticID StrategyPacket::Position;
const StrategyPacket_TacticID StrategyPacket::PositionForPenalty;
const StrategyPacket_TacticID StrategyPacket::PositionForStart;
const StrategyPacket_TacticID StrategyPacket::ReceiveBall;
const StrategyPacket_TacticID StrategyPacket::Defend;
const StrategyPacket_TacticID StrategyPacket::Attack;
const StrategyPacket_TacticID StrategyPacket::Steal;
const StrategyPacket_TacticID StrategyPacket::Velocity;
const StrategyPacket_TacticID StrategyPacket::TacticID_MIN;
const StrategyPacket_TacticID StrategyPacket::TacticID_MAX;
const int StrategyPacket::TacticID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StrategyPacket_Which_descriptor() {
  protobuf_command_2dpacket_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2dpacket_2eproto::file_level_enum_descriptors[2];
}
bool StrategyPacket_Which_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StrategyPacket_Which StrategyPacket::PLAY;
const StrategyPacket_Which StrategyPacket::TACTIC;
const StrategyPacket_Which StrategyPacket::Which_MIN;
const StrategyPacket_Which StrategyPacket::Which_MAX;
const int StrategyPacket::Which_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void StrategyPacket_Tactic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StrategyPacket_Tactic::kTIDFieldNumber;
const int StrategyPacket_Tactic::kBotIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrategyPacket_Tactic::StrategyPacket_Tactic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_command_2dpacket_2eproto::scc_info_StrategyPacket_Tactic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:StrategyPacket.Tactic)
}
StrategyPacket_Tactic::StrategyPacket_Tactic(const StrategyPacket_Tactic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tid_, &from.tid_,
    static_cast<size_t>(reinterpret_cast<char*>(&botid_) -
    reinterpret_cast<char*>(&tid_)) + sizeof(botid_));
  // @@protoc_insertion_point(copy_constructor:StrategyPacket.Tactic)
}

void StrategyPacket_Tactic::SharedCtor() {
  ::memset(&tid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&botid_) -
      reinterpret_cast<char*>(&tid_)) + sizeof(botid_));
}

StrategyPacket_Tactic::~StrategyPacket_Tactic() {
  // @@protoc_insertion_point(destructor:StrategyPacket.Tactic)
  SharedDtor();
}

void StrategyPacket_Tactic::SharedDtor() {
}

void StrategyPacket_Tactic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StrategyPacket_Tactic::descriptor() {
  ::protobuf_command_2dpacket_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_command_2dpacket_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StrategyPacket_Tactic& StrategyPacket_Tactic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_command_2dpacket_2eproto::scc_info_StrategyPacket_Tactic.base);
  return *internal_default_instance();
}


void StrategyPacket_Tactic::Clear() {
// @@protoc_insertion_point(message_clear_start:StrategyPacket.Tactic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&tid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&botid_) -
        reinterpret_cast<char*>(&tid_)) + sizeof(botid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StrategyPacket_Tactic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StrategyPacket.Tactic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .StrategyPacket.TacticID tID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StrategyPacket_TacticID_IsValid(value)) {
            set_tid(static_cast< ::StrategyPacket_TacticID >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 botID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_botid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &botid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StrategyPacket.Tactic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StrategyPacket.Tactic)
  return false;
#undef DO_
}

void StrategyPacket_Tactic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StrategyPacket.Tactic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .StrategyPacket.TacticID tID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tid(), output);
  }

  // required int32 botID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->botid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StrategyPacket.Tactic)
}

::google::protobuf::uint8* StrategyPacket_Tactic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StrategyPacket.Tactic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .StrategyPacket.TacticID tID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tid(), target);
  }

  // required int32 botID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->botid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StrategyPacket.Tactic)
  return target;
}

size_t StrategyPacket_Tactic::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:StrategyPacket.Tactic)
  size_t total_size = 0;

  if (has_tid()) {
    // required .StrategyPacket.TacticID tID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tid());
  }

  if (has_botid()) {
    // required int32 botID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->botid());
  }

  return total_size;
}
size_t StrategyPacket_Tactic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StrategyPacket.Tactic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .StrategyPacket.TacticID tID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tid());

    // required int32 botID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->botid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrategyPacket_Tactic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StrategyPacket.Tactic)
  GOOGLE_DCHECK_NE(&from, this);
  const StrategyPacket_Tactic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StrategyPacket_Tactic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StrategyPacket.Tactic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StrategyPacket.Tactic)
    MergeFrom(*source);
  }
}

void StrategyPacket_Tactic::MergeFrom(const StrategyPacket_Tactic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StrategyPacket.Tactic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tid_ = from.tid_;
    }
    if (cached_has_bits & 0x00000002u) {
      botid_ = from.botid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StrategyPacket_Tactic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StrategyPacket.Tactic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrategyPacket_Tactic::CopyFrom(const StrategyPacket_Tactic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StrategyPacket.Tactic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrategyPacket_Tactic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void StrategyPacket_Tactic::Swap(StrategyPacket_Tactic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrategyPacket_Tactic::InternalSwap(StrategyPacket_Tactic* other) {
  using std::swap;
  swap(tid_, other->tid_);
  swap(botid_, other->botid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StrategyPacket_Tactic::GetMetadata() const {
  protobuf_command_2dpacket_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_command_2dpacket_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StrategyPacket::InitAsDefaultInstance() {
  ::_StrategyPacket_default_instance_._instance.get_mutable()->tactic_ = const_cast< ::StrategyPacket_Tactic*>(
      ::StrategyPacket_Tactic::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StrategyPacket::kPlayFieldNumber;
const int StrategyPacket::kTacticFieldNumber;
const int StrategyPacket::kWhichFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrategyPacket::StrategyPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_command_2dpacket_2eproto::scc_info_StrategyPacket.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:StrategyPacket)
}
StrategyPacket::StrategyPacket(const StrategyPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tactic()) {
    tactic_ = new ::StrategyPacket_Tactic(*from.tactic_);
  } else {
    tactic_ = NULL;
  }
  ::memcpy(&play_, &from.play_,
    static_cast<size_t>(reinterpret_cast<char*>(&which_) -
    reinterpret_cast<char*>(&play_)) + sizeof(which_));
  // @@protoc_insertion_point(copy_constructor:StrategyPacket)
}

void StrategyPacket::SharedCtor() {
  ::memset(&tactic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&play_) -
      reinterpret_cast<char*>(&tactic_)) + sizeof(play_));
  which_ = 1;
}

StrategyPacket::~StrategyPacket() {
  // @@protoc_insertion_point(destructor:StrategyPacket)
  SharedDtor();
}

void StrategyPacket::SharedDtor() {
  if (this != internal_default_instance()) delete tactic_;
}

void StrategyPacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StrategyPacket::descriptor() {
  ::protobuf_command_2dpacket_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_command_2dpacket_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StrategyPacket& StrategyPacket::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_command_2dpacket_2eproto::scc_info_StrategyPacket.base);
  return *internal_default_instance();
}


void StrategyPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:StrategyPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(tactic_ != NULL);
    tactic_->Clear();
  }
  if (cached_has_bits & 6u) {
    play_ = 0;
    which_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StrategyPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StrategyPacket)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .StrategyPacket.Play play = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StrategyPacket_Play_IsValid(value)) {
            set_play(static_cast< ::StrategyPacket_Play >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .StrategyPacket.Tactic tactic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tactic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .StrategyPacket.Which which = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::StrategyPacket_Which_IsValid(value)) {
            set_which(static_cast< ::StrategyPacket_Which >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StrategyPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StrategyPacket)
  return false;
#undef DO_
}

void StrategyPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StrategyPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .StrategyPacket.Play play = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->play(), output);
  }

  // optional .StrategyPacket.Tactic tactic = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_tactic(), output);
  }

  // required .StrategyPacket.Which which = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->which(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:StrategyPacket)
}

::google::protobuf::uint8* StrategyPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StrategyPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .StrategyPacket.Play play = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->play(), target);
  }

  // optional .StrategyPacket.Tactic tactic = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_tactic(), deterministic, target);
  }

  // required .StrategyPacket.Which which = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->which(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StrategyPacket)
  return target;
}

size_t StrategyPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StrategyPacket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .StrategyPacket.Which which = 3;
  if (has_which()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->which());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .StrategyPacket.Tactic tactic = 2;
    if (has_tactic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tactic_);
    }

    // optional .StrategyPacket.Play play = 1;
    if (has_play()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->play());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StrategyPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StrategyPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const StrategyPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StrategyPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StrategyPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StrategyPacket)
    MergeFrom(*source);
  }
}

void StrategyPacket::MergeFrom(const StrategyPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StrategyPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tactic()->::StrategyPacket_Tactic::MergeFrom(from.tactic());
    }
    if (cached_has_bits & 0x00000002u) {
      play_ = from.play_;
    }
    if (cached_has_bits & 0x00000004u) {
      which_ = from.which_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StrategyPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StrategyPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrategyPacket::CopyFrom(const StrategyPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StrategyPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrategyPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_tactic()) {
    if (!this->tactic_->IsInitialized()) return false;
  }
  return true;
}

void StrategyPacket::Swap(StrategyPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrategyPacket::InternalSwap(StrategyPacket* other) {
  using std::swap;
  swap(tactic_, other->tactic_);
  swap(play_, other->play_);
  swap(which_, other->which_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StrategyPacket::GetMetadata() const {
  protobuf_command_2dpacket_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_command_2dpacket_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::StrategyPacket_Tactic* Arena::CreateMaybeMessage< ::StrategyPacket_Tactic >(Arena* arena) {
  return Arena::CreateInternal< ::StrategyPacket_Tactic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::StrategyPacket* Arena::CreateMaybeMessage< ::StrategyPacket >(Arena* arena) {
  return Arena::CreateInternal< ::StrategyPacket >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
